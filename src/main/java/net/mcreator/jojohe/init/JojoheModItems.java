
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.jojohe.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.common.ForgeSpawnEggItem;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.DoubleHighBlockItem;
import net.minecraft.world.item.BlockItem;

import net.mcreator.jojohe.item.ZoomPunchItemItem;
import net.mcreator.jojohe.item.ZeppeliArmorItem;
import net.mcreator.jojohe.item.YoungJonathanShirtItem;
import net.mcreator.jojohe.item.YoungJonathanArmorItem;
import net.mcreator.jojohe.item.YoungDioShirtBlackItem;
import net.mcreator.jojohe.item.YoungDioCoatlessItem;
import net.mcreator.jojohe.item.YoungDioArmorItem;
import net.mcreator.jojohe.item.YellowUmbrellaItem;
import net.mcreator.jojohe.item.YellowClothItem;
import net.mcreator.jojohe.item.WryyItemItem;
import net.mcreator.jojohe.item.WithHumanityAffectionAndNobilityItem;
import net.mcreator.jojohe.item.WisdomItemItem;
import net.mcreator.jojohe.item.WhiteUmbrellaItem;
import net.mcreator.jojohe.item.WhiteClothItem;
import net.mcreator.jojohe.item.WeakVampItemItem;
import net.mcreator.jojohe.item.WavesOfSunUndiscoveredPowerItem;
import net.mcreator.jojohe.item.WarriorItemItem;
import net.mcreator.jojohe.item.VampireSteedItemItem;
import net.mcreator.jojohe.item.VampireItemItem;
import net.mcreator.jojohe.item.VampireBloodIronKnifeItem;
import net.mcreator.jojohe.item.UndiscoveredPowerAncientFruitsItem;
import net.mcreator.jojohe.item.UndeadArmyItemItem;
import net.mcreator.jojohe.item.TwoBoysItem;
import net.mcreator.jojohe.item.TranscendItem;
import net.mcreator.jojohe.item.TonpettyArmorItem;
import net.mcreator.jojohe.item.ThunderSplitItemItem;
import net.mcreator.jojohe.item.TheTaleOfTheirLoveItem;
import net.mcreator.jojohe.item.TattooArmorItem;
import net.mcreator.jojohe.item.TarkusGreatswordItem;
import net.mcreator.jojohe.item.TarkusArmorItem;
import net.mcreator.jojohe.item.SuspicionItem;
import net.mcreator.jojohe.item.SunscreenItemItem;
import net.mcreator.jojohe.item.SunlightYellowItemItem;
import net.mcreator.jojohe.item.SuddenTurnItem;
import net.mcreator.jojohe.item.StruttingTheOgreStreetItem;
import net.mcreator.jojohe.item.StreetFighterItemItem;
import net.mcreator.jojohe.item.StraizoArmorItem;
import net.mcreator.jojohe.item.StoneMaskTheSecretItem;
import net.mcreator.jojohe.item.StoneMaskPrologueItem;
import net.mcreator.jojohe.item.StoneMaskItem;
import net.mcreator.jojohe.item.SpeedwagonsHammerItem;
import net.mcreator.jojohe.item.SpeedwagonArmorItem;
import net.mcreator.jojohe.item.SpaceRipperItemItem;
import net.mcreator.jojohe.item.SonoChiNoSadameItem;
import net.mcreator.jojohe.item.SledgehammerItemItem;
import net.mcreator.jojohe.item.SilentHorizonItem;
import net.mcreator.jojohe.item.ShadowbornItemItem;
import net.mcreator.jojohe.item.ShadowTeleportItemItem;
import net.mcreator.jojohe.item.ShadowDioArmorItem;
import net.mcreator.jojohe.item.SendoOverdriveItemItem;
import net.mcreator.jojohe.item.ScarletOverdriveIemItem;
import net.mcreator.jojohe.item.RoundaboutItem;
import net.mcreator.jojohe.item.RoseTossItemItem;
import net.mcreator.jojohe.item.ReturnFromTheVergeOfDeathItem;
import net.mcreator.jojohe.item.ResultsOfThePlotItem;
import net.mcreator.jojohe.item.ResilienceItemItem;
import net.mcreator.jojohe.item.RedWineItem;
import net.mcreator.jojohe.item.RedUmbrellaItem;
import net.mcreator.jojohe.item.RedStoneOfAjaItem;
import net.mcreator.jojohe.item.RedClothItem;
import net.mcreator.jojohe.item.PurpleUmbrellaItem;
import net.mcreator.jojohe.item.PurpleClothItem;
import net.mcreator.jojohe.item.PluckItem;
import net.mcreator.jojohe.item.PinkUmbrellaItem;
import net.mcreator.jojohe.item.PinkClothItem;
import net.mcreator.jojohe.item.PhilosophersStoneItem;
import net.mcreator.jojohe.item.PersistenceInnocentStreamItem;
import net.mcreator.jojohe.item.PartingRegretsItem;
import net.mcreator.jojohe.item.PartingItem;
import net.mcreator.jojohe.item.OverdriveItem;
import net.mcreator.jojohe.item.OverdriveBarrageItemItem;
import net.mcreator.jojohe.item.OrangeUmbrellaItem;
import net.mcreator.jojohe.item.OrangeClothItem;
import net.mcreator.jojohe.item.NecromancerItemItem;
import net.mcreator.jojohe.item.MysteriousVisitorItem;
import net.mcreator.jojohe.item.MagentaUmbrellaItem;
import net.mcreator.jojohe.item.MagentaClothItem;
import net.mcreator.jojohe.item.LuckItem;
import net.mcreator.jojohe.item.LoveLivelyItem;
import net.mcreator.jojohe.item.LookingTowardTomorrowItem;
import net.mcreator.jojohe.item.LimeUmbrellaItem;
import net.mcreator.jojohe.item.LimeClothItem;
import net.mcreator.jojohe.item.LightningSpeedItem;
import net.mcreator.jojohe.item.LightGrayUmbrellaItem;
import net.mcreator.jojohe.item.LightGrayClothItem;
import net.mcreator.jojohe.item.LightBlueUmbrellaItem;
import net.mcreator.jojohe.item.LightBlueClothItem;
import net.mcreator.jojohe.item.LeftHookItemItem;
import net.mcreator.jojohe.item.KnightsOfTerrorItem;
import net.mcreator.jojohe.item.KempoMasterArmorItem;
import net.mcreator.jojohe.item.JonathanBoxingArmorItem;
import net.mcreator.jojohe.item.JonathanArmorItem;
import net.mcreator.jojohe.item.JoestarFamilyItem;
import net.mcreator.jojohe.item.JackTheRipperKnifeItem;
import net.mcreator.jojohe.item.JackTheRipperArmorItem;
import net.mcreator.jojohe.item.IronKnifeItem;
import net.mcreator.jojohe.item.InvisibilityItemItem;
import net.mcreator.jojohe.item.IntertwineDestiniesItem;
import net.mcreator.jojohe.item.InjuredDioCloakItem;
import net.mcreator.jojohe.item.ImperfectAjaItem;
import net.mcreator.jojohe.item.HumanSpiritItemItem;
import net.mcreator.jojohe.item.HumanItemItem;
import net.mcreator.jojohe.item.HotItemItem;
import net.mcreator.jojohe.item.HiddenFeelingsItem;
import net.mcreator.jojohe.item.HermitItemItem;
import net.mcreator.jojohe.item.HermeticArtsUserItem;
import net.mcreator.jojohe.item.HeartbeatItem;
import net.mcreator.jojohe.item.HeartOfDarknessItem;
import net.mcreator.jojohe.item.HamonUserItemItem;
import net.mcreator.jojohe.item.HamonDashItemItem;
import net.mcreator.jojohe.item.HamonBreathingMaskItem;
import net.mcreator.jojohe.item.GroundRippleItemItem;
import net.mcreator.jojohe.item.GreenUmbrellaItem;
import net.mcreator.jojohe.item.GreenClothItem;
import net.mcreator.jojohe.item.GrayUmbrellaItem;
import net.mcreator.jojohe.item.GrayClothItem;
import net.mcreator.jojohe.item.GoonsItemItem;
import net.mcreator.jojohe.item.GapsOfTheHeartItem;
import net.mcreator.jojohe.item.FullBodyCourageItem;
import net.mcreator.jojohe.item.FrozenItemItem;
import net.mcreator.jojohe.item.FromTheDarkAbyssItem;
import net.mcreator.jojohe.item.FriendshipItem;
import net.mcreator.jojohe.item.FleshbudItemItem;
import net.mcreator.jojohe.item.FathersLoveItem;
import net.mcreator.jojohe.item.EvolvedVampItemItem;
import net.mcreator.jojohe.item.DumbellItem;
import net.mcreator.jojohe.item.DireArmorItem;
import net.mcreator.jojohe.item.DioArmorItem;
import net.mcreator.jojohe.item.DeterminationItem;
import net.mcreator.jojohe.item.DestiniesBroughtTogetherItem;
import net.mcreator.jojohe.item.DepthsOfThePaleDarknessItem;
import net.mcreator.jojohe.item.DefenderItemItem;
import net.mcreator.jojohe.item.DecisiveBattleOverlappingDestiniesItem;
import net.mcreator.jojohe.item.DawnItem;
import net.mcreator.jojohe.item.CyanUmbrellaItem;
import net.mcreator.jojohe.item.CyanClothItem;
import net.mcreator.jojohe.item.ConvictionItem;
import net.mcreator.jojohe.item.ConfrontationItem;
import net.mcreator.jojohe.item.ClawBarrageItemItem;
import net.mcreator.jojohe.item.ChimeraItemItem;
import net.mcreator.jojohe.item.ChainedPowerItem;
import net.mcreator.jojohe.item.CarveOutYourRippleItem;
import net.mcreator.jojohe.item.CaptureTheTargetItem;
import net.mcreator.jojohe.item.BrufordHairItem;
import net.mcreator.jojohe.item.BrufordArmorItem;
import net.mcreator.jojohe.item.BrownUmbrellaItem;
import net.mcreator.jojohe.item.BrownClothItem;
import net.mcreator.jojohe.item.BrokenMaskItem;
import net.mcreator.jojohe.item.BoxingGloveItem;
import net.mcreator.jojohe.item.BoxingAchItemItem;
import net.mcreator.jojohe.item.BlueUmbrellaItem;
import net.mcreator.jojohe.item.BlueClothItem;
import net.mcreator.jojohe.item.BlueBoxingGloveItem;
import net.mcreator.jojohe.item.BloodyStoneMaskItem;
import net.mcreator.jojohe.item.BloodyIronKnifeItem;
import net.mcreator.jojohe.item.BloodbathedItemItem;
import net.mcreator.jojohe.item.BloodBottleItem;
import net.mcreator.jojohe.item.BlackUmbrellaItem;
import net.mcreator.jojohe.item.BlackClothItem;
import net.mcreator.jojohe.item.BarrageItemItem;
import net.mcreator.jojohe.item.AfterimagesItemItem;
import net.mcreator.jojohe.item.ASuperhumanRebornItem;
import net.mcreator.jojohe.item.APeaceThatEmbracesItem;
import net.mcreator.jojohe.item.AMomentsHappinessItem;
import net.mcreator.jojohe.item.AFineFellowShowsUpItem;
import net.mcreator.jojohe.item.ADuoOfCourageItem;
import net.mcreator.jojohe.JojoheMod;

public class JojoheModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, JojoheMod.MODID);
	public static final RegistryObject<Item> STONE_MASK_HELMET = REGISTRY.register("stone_mask_helmet", () -> new StoneMaskItem.Helmet());
	public static final RegistryObject<Item> BLOODY_STONE_MASK_HELMET = REGISTRY.register("bloody_stone_mask_helmet", () -> new BloodyStoneMaskItem.Helmet());
	public static final RegistryObject<Item> IRON_KNIFE = REGISTRY.register("iron_knife", () -> new IronKnifeItem());
	public static final RegistryObject<Item> BLOODY_IRON_KNIFE = REGISTRY.register("bloody_iron_knife", () -> new BloodyIronKnifeItem());
	public static final RegistryObject<Item> VAMPIRE_BLOOD_IRON_KNIFE = REGISTRY.register("vampire_blood_iron_knife", () -> new VampireBloodIronKnifeItem());
	public static final RegistryObject<Item> LUCK = REGISTRY.register("luck", () -> new LuckItem());
	public static final RegistryObject<Item> PLUCK = REGISTRY.register("pluck", () -> new PluckItem());
	public static final RegistryObject<Item> SPEEDWAGONS_HAMMER = REGISTRY.register("speedwagons_hammer", () -> new SpeedwagonsHammerItem());
	public static final RegistryObject<Item> TARKUS_GREATSWORD = REGISTRY.register("tarkus_greatsword", () -> new TarkusGreatswordItem());
	public static final RegistryObject<Item> JACK_THE_RIPPER_KNIFE = REGISTRY.register("jack_the_ripper_knife", () -> new JackTheRipperKnifeItem());
	public static final RegistryObject<Item> BOXING_GLOVE = REGISTRY.register("boxing_glove", () -> new BoxingGloveItem());
	public static final RegistryObject<Item> BLUE_BOXING_GLOVE = REGISTRY.register("blue_boxing_glove", () -> new BlueBoxingGloveItem());
	public static final RegistryObject<Item> RED_WINE = REGISTRY.register("red_wine", () -> new RedWineItem());
	public static final RegistryObject<Item> BLOOD_BOTTLE = REGISTRY.register("blood_bottle", () -> new BloodBottleItem());
	public static final RegistryObject<Item> JONATHAN_JOESTAR_SPAWN_EGG = REGISTRY.register("jonathan_joestar_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.JONATHAN_JOESTAR, -11182919, -8827857, new Item.Properties()));
	public static final RegistryObject<Item> SHADOW_DIO_SPAWN_EGG = REGISTRY.register("shadow_dio_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.SHADOW_DIO, -2699954, -14015972, new Item.Properties()));
	public static final RegistryObject<Item> BLOOD_DIO_SPAWN_EGG = REGISTRY.register("blood_dio_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.BLOOD_DIO, -2699954, -9430502, new Item.Properties()));
	public static final RegistryObject<Item> NECRO_DIO_SPAWN_EGG = REGISTRY.register("necro_dio_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.NECRO_DIO, -4738189, -7787990, new Item.Properties()));
	public static final RegistryObject<Item> REO_SPEEDWAGON_SPAWN_EGG = REGISTRY.register("reo_speedwagon_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.REO_SPEEDWAGON, -3555208, -14867659, new Item.Properties()));
	public static final RegistryObject<Item> TONPETTY_SPAWN_EGG = REGISTRY.register("tonpetty_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.TONPETTY, -11912141, -1786323, new Item.Properties()));
	public static final RegistryObject<Item> DIRE_SPAWN_EGG = REGISTRY.register("dire_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.DIRE, -789259, -10263452, new Item.Properties()));
	public static final RegistryObject<Item> STRAIZO_SPAWN_EGG = REGISTRY.register("straizo_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.STRAIZO, -11844510, -14409163, new Item.Properties()));
	public static final RegistryObject<Item> BRUFORD_SPAWN_EGG = REGISTRY.register("bruford_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.BRUFORD, -15396324, -11124878, new Item.Properties()));
	public static final RegistryObject<Item> TARKUS_SPAWN_EGG = REGISTRY.register("tarkus_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.TARKUS, -12303292, -15066598, new Item.Properties()));
	public static final RegistryObject<Item> JACK_THE_RIPPER_SPAWN_EGG = REGISTRY.register("jack_the_ripper_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.JACK_THE_RIPPER, -8752800, -12770525, new Item.Properties()));
	public static final RegistryObject<Item> KEMPO_MASTER_SPAWN_EGG = REGISTRY.register("kempo_master_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.KEMPO_MASTER, -13290145, -6673871, new Item.Properties()));
	public static final RegistryObject<Item> TATTOO_SPAWN_EGG = REGISTRY.register("tattoo_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.TATTOO, -7110813, -10582422, new Item.Properties()));
	public static final RegistryObject<Item> JONATHAN_ARMOR_CHESTPLATE = REGISTRY.register("jonathan_armor_chestplate", () -> new JonathanArmorItem.Chestplate());
	public static final RegistryObject<Item> JONATHAN_ARMOR_LEGGINGS = REGISTRY.register("jonathan_armor_leggings", () -> new JonathanArmorItem.Leggings());
	public static final RegistryObject<Item> JONATHAN_ARMOR_BOOTS = REGISTRY.register("jonathan_armor_boots", () -> new JonathanArmorItem.Boots());
	public static final RegistryObject<Item> DIO_ARMOR_CHESTPLATE = REGISTRY.register("dio_armor_chestplate", () -> new DioArmorItem.Chestplate());
	public static final RegistryObject<Item> DIO_ARMOR_LEGGINGS = REGISTRY.register("dio_armor_leggings", () -> new DioArmorItem.Leggings());
	public static final RegistryObject<Item> DIO_ARMOR_BOOTS = REGISTRY.register("dio_armor_boots", () -> new DioArmorItem.Boots());
	public static final RegistryObject<Item> ZEPPELI_ARMOR_HELMET = REGISTRY.register("zeppeli_armor_helmet", () -> new ZeppeliArmorItem.Helmet());
	public static final RegistryObject<Item> ZEPPELI_ARMOR_CHESTPLATE = REGISTRY.register("zeppeli_armor_chestplate", () -> new ZeppeliArmorItem.Chestplate());
	public static final RegistryObject<Item> ZEPPELI_ARMOR_LEGGINGS = REGISTRY.register("zeppeli_armor_leggings", () -> new ZeppeliArmorItem.Leggings());
	public static final RegistryObject<Item> ZEPPELI_ARMOR_BOOTS = REGISTRY.register("zeppeli_armor_boots", () -> new ZeppeliArmorItem.Boots());
	public static final RegistryObject<Item> SPEEDWAGON_ARMOR_HELMET = REGISTRY.register("speedwagon_armor_helmet", () -> new SpeedwagonArmorItem.Helmet());
	public static final RegistryObject<Item> SPEEDWAGON_ARMOR_CHESTPLATE = REGISTRY.register("speedwagon_armor_chestplate", () -> new SpeedwagonArmorItem.Chestplate());
	public static final RegistryObject<Item> SPEEDWAGON_ARMOR_LEGGINGS = REGISTRY.register("speedwagon_armor_leggings", () -> new SpeedwagonArmorItem.Leggings());
	public static final RegistryObject<Item> SPEEDWAGON_ARMOR_BOOTS = REGISTRY.register("speedwagon_armor_boots", () -> new SpeedwagonArmorItem.Boots());
	public static final RegistryObject<Item> TONPETTY_ARMOR_CHESTPLATE = REGISTRY.register("tonpetty_armor_chestplate", () -> new TonpettyArmorItem.Chestplate());
	public static final RegistryObject<Item> TONPETTY_ARMOR_LEGGINGS = REGISTRY.register("tonpetty_armor_leggings", () -> new TonpettyArmorItem.Leggings());
	public static final RegistryObject<Item> TONPETTY_ARMOR_BOOTS = REGISTRY.register("tonpetty_armor_boots", () -> new TonpettyArmorItem.Boots());
	public static final RegistryObject<Item> DIRE_ARMOR_CHESTPLATE = REGISTRY.register("dire_armor_chestplate", () -> new DireArmorItem.Chestplate());
	public static final RegistryObject<Item> DIRE_ARMOR_LEGGINGS = REGISTRY.register("dire_armor_leggings", () -> new DireArmorItem.Leggings());
	public static final RegistryObject<Item> DIRE_ARMOR_BOOTS = REGISTRY.register("dire_armor_boots", () -> new DireArmorItem.Boots());
	public static final RegistryObject<Item> STRAIZO_ARMOR_HELMET = REGISTRY.register("straizo_armor_helmet", () -> new StraizoArmorItem.Helmet());
	public static final RegistryObject<Item> STRAIZO_ARMOR_CHESTPLATE = REGISTRY.register("straizo_armor_chestplate", () -> new StraizoArmorItem.Chestplate());
	public static final RegistryObject<Item> STRAIZO_ARMOR_LEGGINGS = REGISTRY.register("straizo_armor_leggings", () -> new StraizoArmorItem.Leggings());
	public static final RegistryObject<Item> STRAIZO_ARMOR_BOOTS = REGISTRY.register("straizo_armor_boots", () -> new StraizoArmorItem.Boots());
	public static final RegistryObject<Item> BRUFORD_ARMOR_HELMET = REGISTRY.register("bruford_armor_helmet", () -> new BrufordArmorItem.Helmet());
	public static final RegistryObject<Item> BRUFORD_ARMOR_CHESTPLATE = REGISTRY.register("bruford_armor_chestplate", () -> new BrufordArmorItem.Chestplate());
	public static final RegistryObject<Item> BRUFORD_ARMOR_LEGGINGS = REGISTRY.register("bruford_armor_leggings", () -> new BrufordArmorItem.Leggings());
	public static final RegistryObject<Item> BRUFORD_ARMOR_BOOTS = REGISTRY.register("bruford_armor_boots", () -> new BrufordArmorItem.Boots());
	public static final RegistryObject<Item> TARKUS_ARMOR_HELMET = REGISTRY.register("tarkus_armor_helmet", () -> new TarkusArmorItem.Helmet());
	public static final RegistryObject<Item> TARKUS_ARMOR_CHESTPLATE = REGISTRY.register("tarkus_armor_chestplate", () -> new TarkusArmorItem.Chestplate());
	public static final RegistryObject<Item> TARKUS_ARMOR_LEGGINGS = REGISTRY.register("tarkus_armor_leggings", () -> new TarkusArmorItem.Leggings());
	public static final RegistryObject<Item> TARKUS_ARMOR_BOOTS = REGISTRY.register("tarkus_armor_boots", () -> new TarkusArmorItem.Boots());
	public static final RegistryObject<Item> JACK_THE_RIPPER_ARMOR_CHESTPLATE = REGISTRY.register("jack_the_ripper_armor_chestplate", () -> new JackTheRipperArmorItem.Chestplate());
	public static final RegistryObject<Item> JACK_THE_RIPPER_ARMOR_LEGGINGS = REGISTRY.register("jack_the_ripper_armor_leggings", () -> new JackTheRipperArmorItem.Leggings());
	public static final RegistryObject<Item> JACK_THE_RIPPER_ARMOR_BOOTS = REGISTRY.register("jack_the_ripper_armor_boots", () -> new JackTheRipperArmorItem.Boots());
	public static final RegistryObject<Item> INJURED_DIO_CLOAK_HELMET = REGISTRY.register("injured_dio_cloak_helmet", () -> new InjuredDioCloakItem.Helmet());
	public static final RegistryObject<Item> INJURED_DIO_CLOAK_CHESTPLATE = REGISTRY.register("injured_dio_cloak_chestplate", () -> new InjuredDioCloakItem.Chestplate());
	public static final RegistryObject<Item> INJURED_DIO_CLOAK_LEGGINGS = REGISTRY.register("injured_dio_cloak_leggings", () -> new InjuredDioCloakItem.Leggings());
	public static final RegistryObject<Item> INJURED_DIO_CLOAK_BOOTS = REGISTRY.register("injured_dio_cloak_boots", () -> new InjuredDioCloakItem.Boots());
	public static final RegistryObject<Item> KEMPO_MASTER_ARMOR_HELMET = REGISTRY.register("kempo_master_armor_helmet", () -> new KempoMasterArmorItem.Helmet());
	public static final RegistryObject<Item> KEMPO_MASTER_ARMOR_CHESTPLATE = REGISTRY.register("kempo_master_armor_chestplate", () -> new KempoMasterArmorItem.Chestplate());
	public static final RegistryObject<Item> KEMPO_MASTER_ARMOR_LEGGINGS = REGISTRY.register("kempo_master_armor_leggings", () -> new KempoMasterArmorItem.Leggings());
	public static final RegistryObject<Item> KEMPO_MASTER_ARMOR_BOOTS = REGISTRY.register("kempo_master_armor_boots", () -> new KempoMasterArmorItem.Boots());
	public static final RegistryObject<Item> TATTOO_ARMOR_CHESTPLATE = REGISTRY.register("tattoo_armor_chestplate", () -> new TattooArmorItem.Chestplate());
	public static final RegistryObject<Item> TATTOO_ARMOR_LEGGINGS = REGISTRY.register("tattoo_armor_leggings", () -> new TattooArmorItem.Leggings());
	public static final RegistryObject<Item> TATTOO_ARMOR_BOOTS = REGISTRY.register("tattoo_armor_boots", () -> new TattooArmorItem.Boots());
	public static final RegistryObject<Item> YOUNG_DIO_ARMOR_CHESTPLATE = REGISTRY.register("young_dio_armor_chestplate", () -> new YoungDioArmorItem.Chestplate());
	public static final RegistryObject<Item> YOUNG_DIO_ARMOR_LEGGINGS = REGISTRY.register("young_dio_armor_leggings", () -> new YoungDioArmorItem.Leggings());
	public static final RegistryObject<Item> YOUNG_DIO_ARMOR_BOOTS = REGISTRY.register("young_dio_armor_boots", () -> new YoungDioArmorItem.Boots());
	public static final RegistryObject<Item> YOUNG_DIO_COATLESS_CHESTPLATE = REGISTRY.register("young_dio_coatless_chestplate", () -> new YoungDioCoatlessItem.Chestplate());
	public static final RegistryObject<Item> YOUNG_DIO_SHIRT_BLACK_CHESTPLATE = REGISTRY.register("young_dio_shirt_black_chestplate", () -> new YoungDioShirtBlackItem.Chestplate());
	public static final RegistryObject<Item> YOUNG_JONATHAN_ARMOR_CHESTPLATE = REGISTRY.register("young_jonathan_armor_chestplate", () -> new YoungJonathanArmorItem.Chestplate());
	public static final RegistryObject<Item> YOUNG_JONATHAN_ARMOR_LEGGINGS = REGISTRY.register("young_jonathan_armor_leggings", () -> new YoungJonathanArmorItem.Leggings());
	public static final RegistryObject<Item> YOUNG_JONATHAN_ARMOR_BOOTS = REGISTRY.register("young_jonathan_armor_boots", () -> new YoungJonathanArmorItem.Boots());
	public static final RegistryObject<Item> YOUNG_JONATHAN_SHIRT_CHESTPLATE = REGISTRY.register("young_jonathan_shirt_chestplate", () -> new YoungJonathanShirtItem.Chestplate());
	public static final RegistryObject<Item> JONATHAN_BOXING_ARMOR_CHESTPLATE = REGISTRY.register("jonathan_boxing_armor_chestplate", () -> new JonathanBoxingArmorItem.Chestplate());
	public static final RegistryObject<Item> JONATHAN_BOXING_ARMOR_LEGGINGS = REGISTRY.register("jonathan_boxing_armor_leggings", () -> new JonathanBoxingArmorItem.Leggings());
	public static final RegistryObject<Item> JONATHAN_BOXING_ARMOR_BOOTS = REGISTRY.register("jonathan_boxing_armor_boots", () -> new JonathanBoxingArmorItem.Boots());
	public static final RegistryObject<Item> MAGENTA_WALLPAPER_DARK_OAK = block(JojoheModBlocks.MAGENTA_WALLPAPER_DARK_OAK);
	public static final RegistryObject<Item> MAGENTA_WALLPAPER = block(JojoheModBlocks.MAGENTA_WALLPAPER);
	public static final RegistryObject<Item> DARK_BLUE_WOOL = block(JojoheModBlocks.DARK_BLUE_WOOL);
	public static final RegistryObject<Item> RED_WOOL_STAIRS = block(JojoheModBlocks.RED_WOOL_STAIRS);
	public static final RegistryObject<Item> LIMESTONE = block(JojoheModBlocks.LIMESTONE);
	public static final RegistryObject<Item> LIMESTONE_BRICKS = block(JojoheModBlocks.LIMESTONE_BRICKS);
	public static final RegistryObject<Item> CHISELED_LIMESTONE = block(JojoheModBlocks.CHISELED_LIMESTONE);
	public static final RegistryObject<Item> LIMESTONE_BRICK_STAIRS = block(JojoheModBlocks.LIMESTONE_BRICK_STAIRS);
	public static final RegistryObject<Item> LIMESTONE_STAIRS = block(JojoheModBlocks.LIMESTONE_STAIRS);
	public static final RegistryObject<Item> LIMESTONE_SLABS = block(JojoheModBlocks.LIMESTONE_SLABS);
	public static final RegistryObject<Item> LIMESTONE_BRICK_SLABS = block(JojoheModBlocks.LIMESTONE_BRICK_SLABS);
	public static final RegistryObject<Item> FANCY_WHITE_DOOR = doubleBlock(JojoheModBlocks.FANCY_WHITE_DOOR);
	public static final RegistryObject<Item> FANCY_WHITE_TRAPDOOR = block(JojoheModBlocks.FANCY_WHITE_TRAPDOOR);
	public static final RegistryObject<Item> VAMPIRE_1_SPAWN_EGG = REGISTRY.register("vampire_1_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.VAMPIRE_1, -668231, -10092544, new Item.Properties()));
	public static final RegistryObject<Item> VAMPIRE_2_SPAWN_EGG = REGISTRY.register("vampire_2_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.VAMPIRE_2, -805739, -10092544, new Item.Properties()));
	public static final RegistryObject<Item> VAMPIRE_3_SPAWN_EGG = REGISTRY.register("vampire_3_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.VAMPIRE_3, -3440034, -10092544, new Item.Properties()));
	public static final RegistryObject<Item> VAMPIRE_4_SPAWN_EGG = REGISTRY.register("vampire_4_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.VAMPIRE_4, -10272978, -10092544, new Item.Properties()));
	public static final RegistryObject<Item> HOODED_VAMPIRE_1_SPAWN_EGG = REGISTRY.register("hooded_vampire_1_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HOODED_VAMPIRE_1, -668231, -13434880, new Item.Properties()));
	public static final RegistryObject<Item> HOODED_VAMPIRE_2_SPAWN_EGG = REGISTRY.register("hooded_vampire_2_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HOODED_VAMPIRE_2, -805739, -13434880, new Item.Properties()));
	public static final RegistryObject<Item> HOODED_VAMPIRE_3_SPAWN_EGG = REGISTRY.register("hooded_vampire_3_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HOODED_VAMPIRE_3, -3440034, -13434880, new Item.Properties()));
	public static final RegistryObject<Item> HOODED_VAMPIRE_4_SPAWN_EGG = REGISTRY.register("hooded_vampire_4_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HOODED_VAMPIRE_4, -10272978, -13434880, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_USER_1_SPAWN_EGG = REGISTRY.register("hamon_user_1_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HAMON_USER_1, -668231, -13261, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_USER_2_SPAWN_EGG = REGISTRY.register("hamon_user_2_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HAMON_USER_2, -805739, -13261, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_USER_3_SPAWN_EGG = REGISTRY.register("hamon_user_3_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HAMON_USER_3, -3440034, -13261, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_USER_4_SPAWN_EGG = REGISTRY.register("hamon_user_4_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HAMON_USER_4, -10272978, -13261, new Item.Properties()));
	public static final RegistryObject<Item> WHITE_CLOTH = REGISTRY.register("white_cloth", () -> new WhiteClothItem());
	public static final RegistryObject<Item> LIGHT_GRAY_CLOTH = REGISTRY.register("light_gray_cloth", () -> new LightGrayClothItem());
	public static final RegistryObject<Item> GRAY_CLOTH = REGISTRY.register("gray_cloth", () -> new GrayClothItem());
	public static final RegistryObject<Item> BLACK_CLOTH = REGISTRY.register("black_cloth", () -> new BlackClothItem());
	public static final RegistryObject<Item> BROWN_CLOTH = REGISTRY.register("brown_cloth", () -> new BrownClothItem());
	public static final RegistryObject<Item> RED_CLOTH = REGISTRY.register("red_cloth", () -> new RedClothItem());
	public static final RegistryObject<Item> ORANGE_CLOTH = REGISTRY.register("orange_cloth", () -> new OrangeClothItem());
	public static final RegistryObject<Item> YELLOW_CLOTH = REGISTRY.register("yellow_cloth", () -> new YellowClothItem());
	public static final RegistryObject<Item> LIME_CLOTH = REGISTRY.register("lime_cloth", () -> new LimeClothItem());
	public static final RegistryObject<Item> GREEN_CLOTH = REGISTRY.register("green_cloth", () -> new GreenClothItem());
	public static final RegistryObject<Item> CYAN_CLOTH = REGISTRY.register("cyan_cloth", () -> new CyanClothItem());
	public static final RegistryObject<Item> LIGHT_BLUE_CLOTH = REGISTRY.register("light_blue_cloth", () -> new LightBlueClothItem());
	public static final RegistryObject<Item> BLUE_CLOTH = REGISTRY.register("blue_cloth", () -> new BlueClothItem());
	public static final RegistryObject<Item> PURPLE_CLOTH = REGISTRY.register("purple_cloth", () -> new PurpleClothItem());
	public static final RegistryObject<Item> MAGENTA_CLOTH = REGISTRY.register("magenta_cloth", () -> new MagentaClothItem());
	public static final RegistryObject<Item> PINK_CLOTH = REGISTRY.register("pink_cloth", () -> new PinkClothItem());
	public static final RegistryObject<Item> SONO_CHI_NO_SADAME = REGISTRY.register("sono_chi_no_sadame", () -> new SonoChiNoSadameItem());
	public static final RegistryObject<Item> ROUNDABOUT = REGISTRY.register("roundabout", () -> new RoundaboutItem());
	public static final RegistryObject<Item> STONE_MASK_PROLOGUE = REGISTRY.register("stone_mask_prologue", () -> new StoneMaskPrologueItem());
	public static final RegistryObject<Item> DESTINIES_BROUGHT_TOGETHER = REGISTRY.register("destinies_brought_together", () -> new DestiniesBroughtTogetherItem());
	public static final RegistryObject<Item> JOESTAR_FAMILY = REGISTRY.register("joestar_family", () -> new JoestarFamilyItem());
	public static final RegistryObject<Item> TWO_BOYS = REGISTRY.register("two_boys", () -> new TwoBoysItem());
	public static final RegistryObject<Item> INTERTWINE_DESTINIES = REGISTRY.register("intertwine_destinies", () -> new IntertwineDestiniesItem());
	public static final RegistryObject<Item> LOVE_LIVELY = REGISTRY.register("love_lively", () -> new LoveLivelyItem());
	public static final RegistryObject<Item> FROM_THE_DARK_ABYSS = REGISTRY.register("from_the_dark_abyss", () -> new FromTheDarkAbyssItem());
	public static final RegistryObject<Item> PARTING_REGRETS = REGISTRY.register("parting_regrets", () -> new PartingRegretsItem());
	public static final RegistryObject<Item> HIDDEN_FEELINGS = REGISTRY.register("hidden_feelings", () -> new HiddenFeelingsItem());
	public static final RegistryObject<Item> LIGHTNING_SPEED = REGISTRY.register("lightning_speed", () -> new LightningSpeedItem());
	public static final RegistryObject<Item> SUSPICION = REGISTRY.register("suspicion", () -> new SuspicionItem());
	public static final RegistryObject<Item> GAPS_OF_THE_HEART = REGISTRY.register("gaps_of_the_heart", () -> new GapsOfTheHeartItem());
	public static final RegistryObject<Item> STONE_MASK_THE_SECRET = REGISTRY.register("stone_mask_the_secret", () -> new StoneMaskTheSecretItem());
	public static final RegistryObject<Item> RESULTS_OF_THE_PLOT = REGISTRY.register("results_of_the_plot", () -> new ResultsOfThePlotItem());
	public static final RegistryObject<Item> STRUTTING_THE_OGRE_STREET = REGISTRY.register("strutting_the_ogre_street", () -> new StruttingTheOgreStreetItem());
	public static final RegistryObject<Item> A_FINE_FELLOW_SHOWS_UP = REGISTRY.register("a_fine_fellow_shows_up", () -> new AFineFellowShowsUpItem());
	public static final RegistryObject<Item> FATHERS_LOVE = REGISTRY.register("fathers_love", () -> new FathersLoveItem());
	public static final RegistryObject<Item> SUDDEN_TURN = REGISTRY.register("sudden_turn", () -> new SuddenTurnItem());
	public static final RegistryObject<Item> A_SUPERHUMAN_REBORN = REGISTRY.register("a_superhuman_reborn", () -> new ASuperhumanRebornItem());
	public static final RegistryObject<Item> TRANSCEND = REGISTRY.register("transcend", () -> new TranscendItem());
	public static final RegistryObject<Item> DETERMINATION = REGISTRY.register("determination", () -> new DeterminationItem());
	public static final RegistryObject<Item> HEART_OF_DARKNESS = REGISTRY.register("heart_of_darkness", () -> new HeartOfDarknessItem());
	public static final RegistryObject<Item> A_DUO_OF_COURAGE = REGISTRY.register("a_duo_of_courage", () -> new ADuoOfCourageItem());
	public static final RegistryObject<Item> PERSISTENCE_INNOCENT_STREAM = REGISTRY.register("persistence_innocent_stream", () -> new PersistenceInnocentStreamItem());
	public static final RegistryObject<Item> HEARTBEAT = REGISTRY.register("heartbeat", () -> new HeartbeatItem());
	public static final RegistryObject<Item> SILENT_HORIZON = REGISTRY.register("silent_horizon", () -> new SilentHorizonItem());
	public static final RegistryObject<Item> FULL_BODY_COURAGE = REGISTRY.register("full_body_courage", () -> new FullBodyCourageItem());
	public static final RegistryObject<Item> FRIENDSHIP = REGISTRY.register("friendship", () -> new FriendshipItem());
	public static final RegistryObject<Item> RETURN_FROM_THE_VERGE_OF_DEATH = REGISTRY.register("return_from_the_verge_of_death", () -> new ReturnFromTheVergeOfDeathItem());
	public static final RegistryObject<Item> MYSTERIOUS_VISITOR = REGISTRY.register("mysterious_visitor", () -> new MysteriousVisitorItem());
	public static final RegistryObject<Item> OVERDRIVE = REGISTRY.register("overdrive", () -> new OverdriveItem());
	public static final RegistryObject<Item> HERMETIC_ARTS_USER = REGISTRY.register("hermetic_arts_user", () -> new HermeticArtsUserItem());
	public static final RegistryObject<Item> WAVES_OF_SUN_UNDISCOVERED_POWER = REGISTRY.register("waves_of_sun_undiscovered_power", () -> new WavesOfSunUndiscoveredPowerItem());
	public static final RegistryObject<Item> UNDISCOVERED_POWER_ANCIENT_FRUITS = REGISTRY.register("undiscovered_power_ancient_fruits", () -> new UndiscoveredPowerAncientFruitsItem());
	public static final RegistryObject<Item> CAPTURE_THE_TARGET = REGISTRY.register("capture_the_target", () -> new CaptureTheTargetItem());
	public static final RegistryObject<Item> KNIGHTS_OF_TERROR = REGISTRY.register("knights_of_terror", () -> new KnightsOfTerrorItem());
	public static final RegistryObject<Item> WITH_HUMANITY_AFFECTION_AND_NOBILITY = REGISTRY.register("with_humanity_affection_and_nobility", () -> new WithHumanityAffectionAndNobilityItem());
	public static final RegistryObject<Item> A_PEACE_THAT_EMBRACES = REGISTRY.register("a_peace_that_embraces", () -> new APeaceThatEmbracesItem());
	public static final RegistryObject<Item> CARVE_OUT_YOUR_RIPPLE = REGISTRY.register("carve_out_your_ripple", () -> new CarveOutYourRippleItem());
	public static final RegistryObject<Item> LOOKING_TOWARD_TOMORROW = REGISTRY.register("looking_toward_tomorrow", () -> new LookingTowardTomorrowItem());
	public static final RegistryObject<Item> PARTING = REGISTRY.register("parting", () -> new PartingItem());
	public static final RegistryObject<Item> DEPTHS_OF_THE_PALE_DARKNESS = REGISTRY.register("depths_of_the_pale_darkness", () -> new DepthsOfThePaleDarknessItem());
	public static final RegistryObject<Item> CHAINED_POWER = REGISTRY.register("chained_power", () -> new ChainedPowerItem());
	public static final RegistryObject<Item> CONVICTION = REGISTRY.register("conviction", () -> new ConvictionItem());
	public static final RegistryObject<Item> A_MOMENTS_HAPPINESS = REGISTRY.register("a_moments_happiness", () -> new AMomentsHappinessItem());
	public static final RegistryObject<Item> CONFRONTATION = REGISTRY.register("confrontation", () -> new ConfrontationItem());
	public static final RegistryObject<Item> DECISIVE_BATTLE_OVERLAPPING_DESTINIES = REGISTRY.register("decisive_battle_overlapping_destinies", () -> new DecisiveBattleOverlappingDestiniesItem());
	public static final RegistryObject<Item> DAWN = REGISTRY.register("dawn", () -> new DawnItem());
	public static final RegistryObject<Item> THE_TALE_OF_THEIR_LOVE = REGISTRY.register("the_tale_of_their_love", () -> new TheTaleOfTheirLoveItem());
	public static final RegistryObject<Item> ZOMBIE_MINION_SPAWN_EGG = REGISTRY.register("zombie_minion_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.ZOMBIE_MINION, -13607121, -12779520, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_USER_ITEM = REGISTRY.register("hamon_user_item", () -> new HamonUserItemItem());
	public static final RegistryObject<Item> WEAK_VAMP_ITEM = REGISTRY.register("weak_vamp_item", () -> new WeakVampItemItem());
	public static final RegistryObject<Item> FROZEN_ITEM = REGISTRY.register("frozen_item", () -> new FrozenItemItem());
	public static final RegistryObject<Item> SUNLIGHT_YELLOW_ITEM = REGISTRY.register("sunlight_yellow_item", () -> new SunlightYellowItemItem());
	public static final RegistryObject<Item> EVOLVED_VAMP_ITEM = REGISTRY.register("evolved_vamp_item", () -> new EvolvedVampItemItem());
	public static final RegistryObject<Item> ZOMBIE_MINION_NOAI_SPAWN_EGG = REGISTRY.register("zombie_minion_noai_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.ZOMBIE_MINION_NOAI, -13607121, -12779520, new Item.Properties()));
	public static final RegistryObject<Item> CHAMBER_ENTITY_SPAWN_EGG = REGISTRY.register("chamber_entity_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.CHAMBER_ENTITY, -1, -1, new Item.Properties()));
	public static final RegistryObject<Item> SUNSCREEN_ITEM = REGISTRY.register("sunscreen_item", () -> new SunscreenItemItem());
	public static final RegistryObject<Item> HOT_ITEM = REGISTRY.register("hot_item", () -> new HotItemItem());
	public static final RegistryObject<Item> BRUFORD_HAIR_HELMET = REGISTRY.register("bruford_hair_helmet", () -> new BrufordHairItem.Helmet());
	public static final RegistryObject<Item> BROKEN_MASK = REGISTRY.register("broken_mask", () -> new BrokenMaskItem());
	public static final RegistryObject<Item> HUMAN_ITEM = REGISTRY.register("human_item", () -> new HumanItemItem());
	public static final RegistryObject<Item> HERMIT_ITEM = REGISTRY.register("hermit_item", () -> new HermitItemItem());
	public static final RegistryObject<Item> VAMPIRE_ITEM = REGISTRY.register("vampire_item", () -> new VampireItemItem());
	public static final RegistryObject<Item> WARRIOR_ITEM = REGISTRY.register("warrior_item", () -> new WarriorItemItem());
	public static final RegistryObject<Item> WISDOM_ITEM = REGISTRY.register("wisdom_item", () -> new WisdomItemItem());
	public static final RegistryObject<Item> BLOODBATHED_ITEM = REGISTRY.register("bloodbathed_item", () -> new BloodbathedItemItem());
	public static final RegistryObject<Item> SHADOWBORN_ITEM = REGISTRY.register("shadowborn_item", () -> new ShadowbornItemItem());
	public static final RegistryObject<Item> STREET_FIGHTER_ITEM = REGISTRY.register("street_fighter_item", () -> new StreetFighterItemItem());
	public static final RegistryObject<Item> NECROMANCER_ITEM = REGISTRY.register("necromancer_item", () -> new NecromancerItemItem());
	public static final RegistryObject<Item> SCARLET_OVERDRIVE_IEM = REGISTRY.register("scarlet_overdrive_iem", () -> new ScarletOverdriveIemItem());
	public static final RegistryObject<Item> HAMON_DASH_ITEM = REGISTRY.register("hamon_dash_item", () -> new HamonDashItemItem());
	public static final RegistryObject<Item> FLESHBUD_ITEM = REGISTRY.register("fleshbud_item", () -> new FleshbudItemItem());
	public static final RegistryObject<Item> INVISIBILITY_ITEM = REGISTRY.register("invisibility_item", () -> new InvisibilityItemItem());
	public static final RegistryObject<Item> SHADOW_TELEPORT_ITEM = REGISTRY.register("shadow_teleport_item", () -> new ShadowTeleportItemItem());
	public static final RegistryObject<Item> RESILIENCE_ITEM = REGISTRY.register("resilience_item", () -> new ResilienceItemItem());
	public static final RegistryObject<Item> CLAW_BARRAGE_ITEM = REGISTRY.register("claw_barrage_item", () -> new ClawBarrageItemItem());
	public static final RegistryObject<Item> WRYY_ITEM = REGISTRY.register("wryy_item", () -> new WryyItemItem());
	public static final RegistryObject<Item> CHIMERA_ITEM = REGISTRY.register("chimera_item", () -> new ChimeraItemItem());
	public static final RegistryObject<Item> VAMPIRE_STEED_ITEM = REGISTRY.register("vampire_steed_item", () -> new VampireSteedItemItem());
	public static final RegistryObject<Item> UNDEAD_ARMY_ITEM = REGISTRY.register("undead_army_item", () -> new UndeadArmyItemItem());
	public static final RegistryObject<Item> GROUND_RIPPLE_ITEM = REGISTRY.register("ground_ripple_item", () -> new GroundRippleItemItem());
	public static final RegistryObject<Item> ROSE_TOSS_ITEM = REGISTRY.register("rose_toss_item", () -> new RoseTossItemItem());
	public static final RegistryObject<Item> AFTERIMAGES_ITEM = REGISTRY.register("afterimages_item", () -> new AfterimagesItemItem());
	public static final RegistryObject<Item> OVERDRIVE_BARRAGE_ITEM = REGISTRY.register("overdrive_barrage_item", () -> new OverdriveBarrageItemItem());
	public static final RegistryObject<Item> SENDO_OVERDRIVE_ITEM = REGISTRY.register("sendo_overdrive_item", () -> new SendoOverdriveItemItem());
	public static final RegistryObject<Item> THUNDER_SPLIT_ITEM = REGISTRY.register("thunder_split_item", () -> new ThunderSplitItemItem());
	public static final RegistryObject<Item> DEFENDER_ITEM = REGISTRY.register("defender_item", () -> new DefenderItemItem());
	public static final RegistryObject<Item> BOXING_ACH_ITEM = REGISTRY.register("boxing_ach_item", () -> new BoxingAchItemItem());
	public static final RegistryObject<Item> BARRAGE_ITEM = REGISTRY.register("barrage_item", () -> new BarrageItemItem());
	public static final RegistryObject<Item> HUMAN_SPIRIT_ITEM = REGISTRY.register("human_spirit_item", () -> new HumanSpiritItemItem());
	public static final RegistryObject<Item> SLEDGEHAMMER_ITEM = REGISTRY.register("sledgehammer_item", () -> new SledgehammerItemItem());
	public static final RegistryObject<Item> GOONS_ITEM = REGISTRY.register("goons_item", () -> new GoonsItemItem());
	public static final RegistryObject<Item> SHADOW_DIO_ARMOR_CHESTPLATE = REGISTRY.register("shadow_dio_armor_chestplate", () -> new ShadowDioArmorItem.Chestplate());
	public static final RegistryObject<Item> SHADOW_DIO_ARMOR_LEGGINGS = REGISTRY.register("shadow_dio_armor_leggings", () -> new ShadowDioArmorItem.Leggings());
	public static final RegistryObject<Item> SHADOW_DIO_ARMOR_BOOTS = REGISTRY.register("shadow_dio_armor_boots", () -> new ShadowDioArmorItem.Boots());
	public static final RegistryObject<Item> LEFT_HOOK_ITEM = REGISTRY.register("left_hook_item", () -> new LeftHookItemItem());
	public static final RegistryObject<Item> CAT_BIRD_CHIMERA_SPAWN_EGG = REGISTRY.register("cat_bird_chimera_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.CAT_BIRD_CHIMERA, -5197648, -9605779, new Item.Properties()));
	public static final RegistryObject<Item> DOG_HUMAN_CHIMERA_SPAWN_EGG = REGISTRY.register("dog_human_chimera_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.DOG_HUMAN_CHIMERA, -5197648, -9605779, new Item.Properties()));
	public static final RegistryObject<Item> VAMPIRE_STEED_ENTITY_SPAWN_EGG = REGISTRY.register("vampire_steed_entity_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.VAMPIRE_STEED_ENTITY, -13343691, -15458028, new Item.Properties()));
	public static final RegistryObject<Item> VAMPIRE_STEED_NOAI_SPAWN_EGG = REGISTRY.register("vampire_steed_noai_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.VAMPIRE_STEED_NOAI, -13343691, -15458028, new Item.Properties()));
	public static final RegistryObject<Item> DOG_HUMAN_CHIMERA_NOAI_SPAWN_EGG = REGISTRY.register("dog_human_chimera_noai_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.DOG_HUMAN_CHIMERA_NOAI, -5197648, -9605779, new Item.Properties()));
	public static final RegistryObject<Item> CAT_BIRD_CHIMERA_NOAI_SPAWN_EGG = REGISTRY.register("cat_bird_chimera_noai_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.CAT_BIRD_CHIMERA_NOAI, -5197648, -9605779, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_SHADOW_SPAWN_EGG = REGISTRY.register("hamon_shadow_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.HAMON_SHADOW, -13421773, -6710887, new Item.Properties()));
	public static final RegistryObject<Item> SPACE_RIPPER_ITEM = REGISTRY.register("space_ripper_item", () -> new SpaceRipperItemItem());
	public static final RegistryObject<Item> ZOOM_PUNCH_ITEM = REGISTRY.register("zoom_punch_item", () -> new ZoomPunchItemItem());
	public static final RegistryObject<Item> WHITE_UMBRELLA = REGISTRY.register("white_umbrella", () -> new WhiteUmbrellaItem());
	public static final RegistryObject<Item> LIGHT_GRAY_UMBRELLA = REGISTRY.register("light_gray_umbrella", () -> new LightGrayUmbrellaItem());
	public static final RegistryObject<Item> GRAY_UMBRELLA = REGISTRY.register("gray_umbrella", () -> new GrayUmbrellaItem());
	public static final RegistryObject<Item> BLACK_UMBRELLA = REGISTRY.register("black_umbrella", () -> new BlackUmbrellaItem());
	public static final RegistryObject<Item> BROWN_UMBRELLA = REGISTRY.register("brown_umbrella", () -> new BrownUmbrellaItem());
	public static final RegistryObject<Item> RED_UMBRELLA = REGISTRY.register("red_umbrella", () -> new RedUmbrellaItem());
	public static final RegistryObject<Item> ORANGE_UMBRELLA = REGISTRY.register("orange_umbrella", () -> new OrangeUmbrellaItem());
	public static final RegistryObject<Item> YELLOW_UMBRELLA = REGISTRY.register("yellow_umbrella", () -> new YellowUmbrellaItem());
	public static final RegistryObject<Item> LIME_UMBRELLA = REGISTRY.register("lime_umbrella", () -> new LimeUmbrellaItem());
	public static final RegistryObject<Item> GREEN_UMBRELLA = REGISTRY.register("green_umbrella", () -> new GreenUmbrellaItem());
	public static final RegistryObject<Item> CYAN_UMBRELLA = REGISTRY.register("cyan_umbrella", () -> new CyanUmbrellaItem());
	public static final RegistryObject<Item> LIGHT_BLUE_UMBRELLA = REGISTRY.register("light_blue_umbrella", () -> new LightBlueUmbrellaItem());
	public static final RegistryObject<Item> BLUE_UMBRELLA = REGISTRY.register("blue_umbrella", () -> new BlueUmbrellaItem());
	public static final RegistryObject<Item> PURPLE_UMBRELLA = REGISTRY.register("purple_umbrella", () -> new PurpleUmbrellaItem());
	public static final RegistryObject<Item> MAGENTA_UMBRELLA = REGISTRY.register("magenta_umbrella", () -> new MagentaUmbrellaItem());
	public static final RegistryObject<Item> PINK_UMBRELLA = REGISTRY.register("pink_umbrella", () -> new PinkUmbrellaItem());
	public static final RegistryObject<Item> IMPERFECT_AJA = REGISTRY.register("imperfect_aja", () -> new ImperfectAjaItem());
	public static final RegistryObject<Item> RED_STONE_OF_AJA = REGISTRY.register("red_stone_of_aja", () -> new RedStoneOfAjaItem());
	public static final RegistryObject<Item> PHILOSOPHERS_STONE = REGISTRY.register("philosophers_stone", () -> new PhilosophersStoneItem());
	public static final RegistryObject<Item> DIO_BRANDO_SPAWN_EGG = REGISTRY.register("dio_brando_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.DIO_BRANDO, -205, -26368, new Item.Properties()));
	public static final RegistryObject<Item> HAMON_BREATHING_MASK_HELMET = REGISTRY.register("hamon_breathing_mask_helmet", () -> new HamonBreathingMaskItem.Helmet());
	public static final RegistryObject<Item> DUMBELL = REGISTRY.register("dumbell", () -> new DumbellItem());
	public static final RegistryObject<Item> WILL_A_ZEPPELI_SPAWN_EGG = REGISTRY.register("will_a_zeppeli_spawn_egg", () -> new ForgeSpawnEggItem(JojoheModEntities.WILL_A_ZEPPELI, -1577999, -15260325, new Item.Properties()));
	public static final RegistryObject<Item> DARK_OAK_PANEL = block(JojoheModBlocks.DARK_OAK_PANEL);

	private static RegistryObject<Item> block(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
	}

	private static RegistryObject<Item> doubleBlock(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new DoubleHighBlockItem(block.get(), new Item.Properties()));
	}
}
